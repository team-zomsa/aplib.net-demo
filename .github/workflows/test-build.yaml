name: Build pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonar:
    name: Test and Analyze with SonarCloud
    runs-on: windows-latest
    strategy:
      matrix:
        unity-version: [2022.3.19f1]
    environment:
      UNITY_PATH: C:\Program Files\Unity\Hub\Editor\${{ matrix.unity-version }}\Editor\Unity.exe
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Restore Unity Installation Cache
        id: cache-unity
        uses: actions/cache@v2
        with:
          path: ${{ env.UNITY_PATH }}
          key: ${{ runner.os }}-unity-${{ matrix.unity-version }}
      - name: Setup Unity for SonarCloud
        id: setup-unity
        uses: kuler90/setup-unity@v1
        with:
          project-path: aplib.net-demo/
        if: steps.cache-unity.outputs.cache-hit != 'true'
      - name: Cache Unity Installation
        uses: actions/cache@v2
        with:
          path: ${{ env.UNITY_PATH }}
          key: ${{ runner.os }}-unity-${{ matrix.unity-version }}
          restore-keys: ${{ runner.os }}-unity
      # - name: Activate Unity for SonarCloud
      #   uses: kuler90/activate-unity@v1
      #   with:
      #     unity-username: ${{ secrets.UNITY_EMAIL }}
      #     unity-password: ${{ secrets.UNITY_PASSWORD }}
      #     unity-license: ${{ secrets.UNITY_LICENSE }}
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build the project
        shell: powershell
        run: |
          dotnet build --no-incremental
      - name: Test the project
        shell: powershell
        run: | 
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  build:
    name: Build for ${{ matrix.targetPlatform }}, ${{ matrix.unity-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        unity-version:
          - 2022.3.19f1
        targetPlatform: 
          - StandaloneOSX
          - StandaloneWindows64
          - StandaloneLinux64
          - WebGL
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      - name: Build for ${{ matrix.targetPlatform }}, ${{ matrix.unity-version }}
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with: 
          targetPlatform: ${{ matrix.platform }}
          unityVersion: ${{ matrix.unity-version }}
          projectPath: aplib.net-demo
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build
          path: Build