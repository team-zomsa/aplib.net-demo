name: Build pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonar:
    name: Test and Analyze with SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: "https://sonarcloud.io"    
      #     SONAR_ORGANIZATION: "team-zomsa"  
      #     SONAR_PROJECT_KEY: "team-zomsa_aplib.net-demo"
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
      - name: Setup dotnet 5 for SonarQube
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '5.0.x'
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Perform Sonar Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  unity-test:
    name: Test with Unity Test Runner
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ./aplib.net-demo/Library
          key: Library-aplib.net-demo-test-runner
          restore-keys: |
            Library-aplib.net-demo-
            Library-
      - uses: game-ci/unity-test-runner@v4
        id: unity-test-step
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ./aplib.net-demo/
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      # Currently not working, somehow does not exist, even though it should according to the documentation
      #  and also the output of the action:
      # Docs: https://game.ci/docs/github/test-runner/#getting-coverage-results
      # Log: https://github.com/team-zomsa/aplib.net-demo/actions/runs/8072459362/job/22054249779?pr=5#step:3:13068
      # - name: Comment Coverage
      #   uses: thollander/actions-comment-pull-request@v2
      #   with:
      #     filePath: ./aplib.net-demo/Assets/Scripts/${{ steps.unity-test-step.outputs.coveragePath }}

  build:
    name: Build for ${{ matrix.targetPlatform }}, ${{ matrix.unity-version }}
    needs: [sonar, unity-test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        unity-version:
          - 2022.3.19f1
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows64
          - StandaloneLinux64
          - WebGL
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      - name: Build for ${{ matrix.targetPlatform }}, ${{ matrix.unity-version }}
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: ${{ matrix.unity-version }}
          projectPath: aplib.net-demo
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.targetPlatform }}-${{ matrix.unity-version }}
          path: build