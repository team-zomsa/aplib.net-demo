name: Test and Build Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  unity-test:
    name: Test with Unity Test Runner
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ./aplib.net-demo/Library
          key: Library-aplib.net-demo-test-runner
          restore-keys: |
            Library-aplib.net-demo-
            Library-
      - uses: game-ci/unity-test-runner@v4
        id: unity-test-step
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ./aplib.net-demo/
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          coverageOptions: "generateAdditionalMetrics;generateHtmlReport;generateHtmlReportHistory;generateBadgeReport"
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage results
          path: ${{ steps.unity-test-step.outputs.coveragePath }}

  sonar:
    name: Test and Analyze with SonarCloud
    needs: unity-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
      - name: Setup dotnet 5 for SonarQube
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '5.0.x'
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Perform Sonar Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: -D sonar.cs.opencover.reportsPaths="CodeCoverage/aplib.net-demo-opencov/EditMode/TestCoverageResults_0000.xml,CodeCoverage/aplib.net-demo-opencov/PlayMode/TestCoverageResults_0000.xml"