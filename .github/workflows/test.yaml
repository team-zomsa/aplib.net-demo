name: Test Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unity-test:
    name: Test with Unity Test Runner
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ./aplib.net-demo/Library
          key: Library-${{ hashFiles('aplib.net-demo/Assets/**', 'aplib.net-demo/Packages/**', 'aplib.net-demo/ProjectSettings/**') }}
          restore-keys: |
            Library-${{ hashFiles('aplib.net-demo/Assets/**', 'aplib.net-demo/Packages/**', 'aplib.net-demo/ProjectSettings/**') }}
      - uses: game-ci/unity-test-runner@v4
        id: unity-test-step
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ./aplib.net-demo/
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          coverageOptions: "generateAdditionalMetrics"
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage results
          path: ${{ steps.unity-test-step.outputs.coveragePath }}

  sonar:
    name: Test and Analyze with SonarCloud
    needs: unity-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Coverage Results
        uses: actions/download-artifact@v4
        with:
          name: Coverage results
          path: CodeCoverage
      - name: Replace paths in Coverage Results
        run: |
          find CodeCoverage -name "*.xml" -exec sed -i 's|/github/workspace/|/home/runner/work/aplib.net-demo/aplib.net-demo/|g' {} \;
      - name: Restore Unity Editor
        id: restore-unity-editor
        uses: actions/cache/restore@v4
        with:
          path: Unity/Hub/Editor
          key: Unity-Editor-2022.3.19f1
      - name: Install Unity Editor
        run: |
          chmod +x ./scripts/install-unity.sh
          ./scripts/install-unity.sh
        if: steps.restore-unity-editor.outputs.cache-hit != 'true'
      - name: Cache Unity Editor
        id: cache-unity-editor
        uses: actions/cache/save@v4
        with:
          path: Unity/Hub/Editor
          key: Unity-Editor-2022.3.19f1
        if: steps.restore-unity-editor.outputs.cache-hit != 'true'
      - name: Debug - List all files
        run: |
          ls -R
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          shell: bash
        run: |
          dotnet tool update dotnet-sonarscanner --global
          dotnet sonarscanner begin /k:"team-zomsa_aplib.net-demo" /o:"team-zomsa" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.projectBaseDir="/home/runner/work/aplib.net-demo/aplib.net-demo/aplib.net-demo/Assets/Scripts" /d:sonar.cs.opencover.reportsPaths="CodeCoverage/aplib.net-demo-opencov/**/*.xml"
          dotnet build ./scripts/Analysis.csproj
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
