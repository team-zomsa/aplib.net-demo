name: Test Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unity-test:
    name: Test with Unity Test Runner
    permissions: write-all
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ./aplib.net-demo/Library
          key: Library-${{ hashFiles('aplib.net-demo/Assets/**', 'aplib.net-demo/Packages/**', 'aplib.net-demo/ProjectSettings/**') }}
          restore-keys: |
            Library-${{ hashFiles('aplib.net-demo/Assets/**', 'aplib.net-demo/Packages/**', 'aplib.net-demo/ProjectSettings/**') }}
      - uses: game-ci/unity-test-runner@v4
        id: unity-test-step
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ./aplib.net-demo/
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          coverageOptions: "generateAdditionalMetrics;generateHtmlReport;generateHtmlReportHistory;generateBadgeReport"
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage results
          path: ${{ steps.unity-test-step.outputs.coveragePath }}
      - name: Install dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 5.0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      # - name: Run SonarScanner
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     .\.sonar\scanner\dotnet-sonarscanner \
      #       -Dsonar.projectKey=aplib.net-demo \
      #       -Dsonar.organization=team-zomsa \
      #       -Dsonar.host.url=https://sonarcloud.io \
      #       -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
      #       -Dsonar.coverageReportPaths=${{ steps.unity-test-step.outputs.coveragePath }}/opencov \
      #       -Dsonar.scanner.skipDynamicAnalysis=true \
      #       -Dsonar.qualitygate.wait=true

      - name: Prepare SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: >
          .\.sonar\scanner\dotnet-sonarscanner begin
          /k:"team-zomsa_aplib.net-demo" /o:"team-zomsa"
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.cs.vscoveragexml.reportsPaths=${{ steps.unity-test-step.outputs.coveragePath }}/opencov
      # - name: Build the project
      #   shell: powershell
      #   run: |
      #     dotnet build --no-incremental
      # - name: Test the project
      #   shell: powershell
      #   run: | 
      #     dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"


        #asdf
          # .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      
        #example for some reason:
          # ./sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
          #   -Dsonar.projectKey=<your_project_key> \
          #   -Dsonar.organization=<your_organization> \
          #   -Dsonar.host.url=https://sonarcloud.io \
          #   -Dsonar.login=$SONAR_TOKEN \
          #   -Dsonar.coverageReportPaths=${{ steps.unity-test-step.outputs.coveragePath }}/opencov \
          #   -Dsonar.scanner.skipDynamicAnalysis=true \
          #   -Dsonar.qualitygate.wait=true